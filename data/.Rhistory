# p1<-ggplot(pca.db,aes(x=PC.1,y=PC.2,colour=Timepoint,group=SubjectID, shape=Treatment))+
#   geom_point(size=3)+
#   scale_color_manual(values=palette,name="Timepoint")+
#   labs(x=paste('PC-1 (',pca.db$varex[1],'%)',sep=''),
#        y=paste('PC-2 (',pca.db$varex[2],'%)',sep=''),
#        title=paste("DEG FCH>",FCH," p<",p,sep=""))+
#   theme_bw() +
#   facet_wrap(~Treatment)
# p1<-p1+ ggplot2::stat_ellipse(aes(group=Timepoint),data=pca.db,size=.5,level=0.9,show.legend=F)
# #p1<-p1+geom_text(aes(label=SubjectID),nudge_x=0,nudge_y=0.1,size=3)
# ggsave(file=paste(out_dir,"PCA.DEG.FCH",FCH,".p",p,".V2.pdf",sep=""),p1,height=6,width=8)
#
# p1<-ggplot(pca.db,aes(x=PC.1,y=PC.2,colour=Timepoint,group=SubjectID, shape=Treatment))+
#   geom_point(size=3)+
#   scale_color_manual(values=palette,name="Timepoint")+
#   labs(x=paste('PC-1 (',pca.db$varex[1],'%)',sep=''),
#        y=paste('PC-2 (',pca.db$varex[2],'%)',sep=''),
#        title=paste("DEG FCH>",FCH," p<",p,sep=""))+
#   theme_bw()
# p1<-p1+ ggplot2::stat_ellipse(aes(group=var),data=pca.db,size=.5,level=0.9,show.legend=F)
# p1<-p1+geom_text(aes(label=SubjectID),nudge_x=0,nudge_y=0.1,size=3)
# ggsave(file=paste(out_dir,"PCA.DEG.FCH",FCH,".p",p,".V2.ids.pdf",sep=""),p1,height=6,width=8)
}
p <- 0.05; FCH <- 1.5
DetDEGs.Out <- DetDEGs(myebfit)
DetDEGs.Out$DEG
# Heatmap Columns
mm_col_1 <- c(
"Control.NonObese.Control",
"Control.Obese.Control",
"Placebo.BL",
"Placebo.BL",
"Placebo.W4",
"Placebo.W16",
"Placebo.W28",
"Placebo.W40",
"Placebo.W52",
"Placebo.W64",
"Risa.BL",
"Risa.BL",
"Risa.W4",
"Risa.W16",
"Risa.W28"
)
cc_col_1 <- c(
"Placebo.BL.vs.Control.NonObese",
"Placebo.BL.vs.Control.Obese",
"Placebo.W4.vs.BL",
"Placebo.W16.vs.BL",
"Placebo.W28.vs.BL",
"Placebo.W40.vs.BL",
"Placebo.W52.vs.BL",
"Placebo.W64.vs.BL",
"Risa.BL.vs.Control.NonObese",
"Risa.BL.vs.Control.Obese",
"Risa.W4.vs.BL",
"Risa.W16.vs.BL",
"Risa.W28.vs.BL"
)
mm_col_2 <- c(
"Control.NonObese.Control",
"Control.Obese.Control",
"Placebo.BL",
"Placebo.BL",
"Placebo.W4",
"Placebo.W16",
"Placebo.W28",
"Placebo.W40",
"Placebo.W52",
"Placebo.W64",
"Risa.BL",
"Risa.BL",
"Risa.W4",
"Risa.W16",
"Risa.W28"
)
cc_col_2 <- c(
"Placebo.BL.vs.Control.NonObese",
"Placebo.BL.vs.Control.Obese",
"Placebo.W4.vs.BL",
"Placebo.W16.vs.W4",
"Placebo.W28.vs.W16",
"Placebo.W40.vs.W28",
"Placebo.W52.vs.W40",
"Placebo.W64.vs.W52",
"Risa.BL.vs.Control.NonObese",
"Risa.BL.vs.Control.Obese",
"Risa.W4.vs.BL",
"Risa.W16.vs.W4",
"Risa.W28.vs.W16"
)
# Outputs
DoPCA(myreset, DetDEGs.Out$DEG)
p <- 0.1; FCH <- 1.2
DetDEGs.Out <- DetDEGs(myebfit)
DetDEGs.Out$DEG
DoPCA(myreset, DetDEGs.Out$DEG)
DoVenndiagrams(DetDEGs.Out$D)
DoBigTable(myebfit, DetDEGs.Out$DEG)
Do.Top50.FCH.Heatmap<-function(mm_cols, cc_cols, ebfit, DEG, note) {
# mm_cols <- mm_col
# cc_cols <- cc_col
# ebfit <- myebfit
# DEG <- DetDEGs.Out$DEG
mm<-ebfit$means$coefficients[DEG,mm_cols]
cc<-ebfit$contrasts$p.value[DEG,cc_cols]
source("~/Downloads/omicsanalysis/BiostatsALL/R/getstar.R")
ccstar<-apply(cc,2,function(x){sapply(x,getstar)})
cc<-ebfit$contrasts$coeff[DEG,cc_cols]
cccoeff<-apply(cc,2,function(x){sapply(x,function(y){round(sign(y)*(2^abs(y)),2)})})
cc<-sapply(1:length(cc_cols),function(x){paste(cccoeff[,x],ccstar[,x],sep="")})
cc<-cbind("","",cc[,1:8],cc[,9:13]) # To make ncol(cc) == ncol(mm)
rownames(cc)<-rownames(mm)
colnames(cc)<-colnames(mm)
colfac<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,1]))
facsepr<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,2]))
# Forget about order, we only have 48 proteins.
pdf(paste(out_dir,".Heatmap.DEGs.p",p,".FCH",FCH,".Top50.",note,".pdf",sep=""),width=10,heigh=12)
DoHeatmap(mat=mm,
facsepr=colfac,
colfac=colfac,
symb=NULL,
dmeth=function(x){cor.dist(x,abs=F)},
hmeth='average',
margins=c(8,8),
cex.genes=1,
ColD=FALSE,main=paste("Genes:Top50.DEG., Cellnote: ",note,sep=""),
cellnote=cc, notecex=1,notecol="black",
scl='row', breaks=seq(-2,2,.1),
lhei = c(1,10) , lwid = c(2,5),
cexCol=1,colscheme='gray',srtCol=90,adjCol=1)
dev.off()
}
## p=0.05, FCH=1.5 ----
p <- 0.05; FCH <- 1.5
DetDEGs.Out <- DetDEGs(myebfit)
DetDEGs.Out$DEG
# Heatmap Columns
mm_col_1 <- c(
"Control.NonObese.Control",
"Control.Obese.Control",
"Placebo.BL",
"Placebo.BL",
"Placebo.W4",
"Placebo.W16",
"Placebo.W28",
"Placebo.W40",
"Placebo.W52",
"Placebo.W64",
"Risa.BL",
"Risa.BL",
"Risa.W4",
"Risa.W16",
"Risa.W28"
)
cc_col_1 <- c(
"Placebo.BL.vs.Control.NonObese",
"Placebo.BL.vs.Control.Obese",
"Placebo.W4.vs.BL",
"Placebo.W16.vs.BL",
"Placebo.W28.vs.BL",
"Placebo.W40.vs.BL",
"Placebo.W52.vs.BL",
"Placebo.W64.vs.BL",
"Risa.BL.vs.Control.NonObese",
"Risa.BL.vs.Control.Obese",
"Risa.W4.vs.BL",
"Risa.W16.vs.BL",
"Risa.W28.vs.BL"
)
mm_col_2 <- c(
"Control.NonObese.Control",
"Control.Obese.Control",
"Placebo.BL",
"Placebo.BL",
"Placebo.W4",
"Placebo.W16",
"Placebo.W28",
"Placebo.W40",
"Placebo.W52",
"Placebo.W64",
"Risa.BL",
"Risa.BL",
"Risa.W4",
"Risa.W16",
"Risa.W28"
)
cc_col_2 <- c(
"Placebo.BL.vs.Control.NonObese",
"Placebo.BL.vs.Control.Obese",
"Placebo.W4.vs.BL",
"Placebo.W16.vs.W4",
"Placebo.W28.vs.W16",
"Placebo.W40.vs.W28",
"Placebo.W52.vs.W40",
"Placebo.W64.vs.W52",
"Risa.BL.vs.Control.NonObese",
"Risa.BL.vs.Control.Obese",
"Risa.W4.vs.BL",
"Risa.W16.vs.W4",
"Risa.W28.vs.W16"
)
# Outputs
DoPCA(myreset, DetDEGs.Out$DEG)
DoMeansHeatmap(colnames(myebfit$means), myebfit, DetDEGs.Out$DEG)
Do.Top50.FCH.Heatmap(mm_col_1, cc_col_1, myebfit, DEG, "FCH.vs.BL")
Do.Top50.FCH.Heatmap(mm_col_2, cc_col_2, myebfit, DEG, "Weeks.Comparisons")
DoVenndiagrams(DetDEGs.Out$D)
DoBigTable(myebfit, DetDEGs.Out$DEG)
p <- 0.1; FCH <- 1.2
DetDEGs.Out <- DetDEGs(myebfit)
DetDEGs.Out$DEG
DoPCA(myreset, DetDEGs.Out$DEG)
DoMeansHeatmap(colnames(myebfit$means), myebfit, DetDEGs.Out$DEG)
mm_cols <- mm_col
cc_cols <- cc_col
ebfit <- myebfit
DEG <- DetDEGs.Out$DEG
mm<-ebfit$means$coefficients[DEG,mm_cols]
cc<-ebfit$contrasts$p.value[DEG,cc_cols]
source("~/Downloads/omicsanalysis/BiostatsALL/R/getstar.R")
ccstar<-apply(cc,2,function(x){sapply(x,getstar)})
cc<-ebfit$contrasts$coeff[DEG,cc_cols]
cccoeff<-apply(cc,2,function(x){sapply(x,function(y){round(sign(y)*(2^abs(y)),2)})})
cc<-sapply(1:length(cc_cols),function(x){paste(cccoeff[,x],ccstar[,x],sep="")})
cc<-cbind("","",cc[,1:8],cc[,9:13]) # To make ncol(cc) == ncol(mm)
rownames(cc)<-rownames(mm)
colnames(cc)<-colnames(mm)
colfac<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,1]))
facsepr<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,2]))
colnames(ebfit$contrasts)
order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])
rownames(ebfit$contrasts$coeff)[order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
mm[rownames(mm) %in% mysymbolsordered,]
mysymbolsordered <- rownames(ebfit$contrasts$coeff)[order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
mm[rownames(mm) %in% mysymbolsordered,]
mysymbolsordered
order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"]
)
order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])
order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])
order(ebfit$contrasts$coeff[DEG,"Risa.BL.vs.Control.NonObese"])
mm[rownames(mm) %in% mysymbolsordered,]
mm[mysymbolsordered,]
mysymbolsordered
mm
nrow(mm)
nrow(mysymbolsordered)
length(mysymbolsordered)
order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])
order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])
mysymbolsordered
mysymbolsordered %in% rownames(mm)
table(mysymbolsordered %in% rownames(mm))
mm[mysymbolsordered %in% rownames(mm),]
mm[mysymbolsordered %in% rownames(mm),]
mysymbolsordered %in% rownames(mm)
mysymbolsordered[mysymbolsordered %in% rownames(mm)]
mm[mysymbolsordered[mysymbolsordered %in% rownames(mm)],]
mysymbolsordered[mysymbolsordered %in% rownames(mm)]
mysymbolsordered[mysymbolsordered %in% rownames(mm)][1:50]
mysymbolsordered <- mysymbolsordered[mysymbolsordered %in% rownames(mm)][1:50]
mm <- mm[mysymbolsordered,]
cc <- cc[mysymbolsordered,]
View(cc)
Do.Top50.FCH.Heatmap_2<-function(mm_cols, cc_cols, ebfit, DEG, note) {
# mm_cols <- mm_col
# cc_cols <- cc_col
# ebfit <- myebfit
# DEG <- DetDEGs.Out$DEG
mm<-ebfit$means$coefficients[DEG,mm_cols]
cc<-ebfit$contrasts$p.value[DEG,cc_cols]
source("~/Downloads/omicsanalysis/BiostatsALL/R/getstar.R")
ccstar<-apply(cc,2,function(x){sapply(x,getstar)})
cc<-ebfit$contrasts$coeff[DEG,cc_cols]
cccoeff<-apply(cc,2,function(x){sapply(x,function(y){round(sign(y)*(2^abs(y)),2)})})
cc<-sapply(1:length(cc_cols),function(x){paste(cccoeff[,x],ccstar[,x],sep="")})
cc<-cbind("","",cc[,1:8],cc[,9:13]) # To make ncol(cc) == ncol(mm)
rownames(cc)<-rownames(mm)
colnames(cc)<-colnames(mm)
colfac<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,1]))
facsepr<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,2]))
mysymbolsordered <- rownames(ebfit$contrasts$coeff)[order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
mysymbolsordered <- mysymbolsordered[mysymbolsordered %in% rownames(mm)][1:50]
mm <- mm[mysymbolsordered,]
cc <- cc[mysymbolsordered,]
pdf(paste(out_dir,".Heatmap.DEGs.Top50.UP.p",p,".FCH",FCH,".Top50.",note,".pdf",sep=""),width=10,heigh=12)
DoHeatmap(mat=mm,
facsepr=colfac,
colfac=colfac,
symb=NULL,
dmeth=function(x){cor.dist(x,abs=F)},
hmeth='average',
margins=c(8,8),
cex.genes=1,
ColD=FALSE,main=paste("Genes:Top50.DEG., Cellnote: ",note,sep=""),
cellnote=cc, notecex=1,notecol="black",
scl='row', breaks=seq(-2,2,.1),
lhei = c(1,10) , lwid = c(2,5),
cexCol=1,colscheme='gray',srtCol=90,adjCol=1)
dev.off()
}
Do.Top50.FCH.UP.Heatmap_2<-function(mm_cols, cc_cols, ebfit, DEG, note) {
# mm_cols <- mm_col
# cc_cols <- cc_col
# ebfit <- myebfit
# DEG <- DetDEGs.Out$DEG
mm<-ebfit$means$coefficients[DEG,mm_cols]
cc<-ebfit$contrasts$p.value[DEG,cc_cols]
source("~/Downloads/omicsanalysis/BiostatsALL/R/getstar.R")
ccstar<-apply(cc,2,function(x){sapply(x,getstar)})
cc<-ebfit$contrasts$coeff[DEG,cc_cols]
cccoeff<-apply(cc,2,function(x){sapply(x,function(y){round(sign(y)*(2^abs(y)),2)})})
cc<-sapply(1:length(cc_cols),function(x){paste(cccoeff[,x],ccstar[,x],sep="")})
cc<-cbind("","",cc[,1:8],cc[,9:13]) # To make ncol(cc) == ncol(mm)
rownames(cc)<-rownames(mm)
colnames(cc)<-colnames(mm)
colfac<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,1]))
facsepr<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,2]))
mysymbolsordered <- rownames(ebfit$contrasts$coeff)[order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
mysymbolsordered <- mysymbolsordered[mysymbolsordered %in% rownames(mm)][1:50]
mm <- mm[mysymbolsordered,]
cc <- cc[mysymbolsordered,]
pdf(paste(out_dir,"Heatmap.DEGs.Top50.UP.p",p,".FCH",FCH,".",note,".pdf",sep=""),width=10,heigh=12)
DoHeatmap(mat=mm,
facsepr=colfac,
colfac=colfac,
symb=NULL,
dmeth=function(x){cor.dist(x,abs=F)},
hmeth='average',
margins=c(8,8),
cex.genes=1,
ColD=FALSE,main=paste("Genes:Top50.Up.of.Risa.BL.vs.Non-Ob.Control , Cellnote: ",note,sep=""),
cellnote=cc, notecex=1,notecol="black",
scl='row', breaks=seq(-2,2,.1),
lhei = c(1,10) , lwid = c(2,5),
cexCol=1,colscheme='gray',srtCol=90,adjCol=1)
dev.off()
}
Do.Top50.FCH.UP.Heatmap_2(mm_col_1, cc_col_1, myebfit, DEG, "FCH.vs.BL")
Do.Top50.FCH.DN.Heatmap<-function(mm_cols, cc_cols, ebfit, DEG, note) {
# mm_cols <- mm_col
# cc_cols <- cc_col
# ebfit <- myebfit
# DEG <- DetDEGs.Out$DEG
mm<-ebfit$means$coefficients[DEG,mm_cols]
cc<-ebfit$contrasts$p.value[DEG,cc_cols]
source("~/Downloads/omicsanalysis/BiostatsALL/R/getstar.R")
ccstar<-apply(cc,2,function(x){sapply(x,getstar)})
cc<-ebfit$contrasts$coeff[DEG,cc_cols]
cccoeff<-apply(cc,2,function(x){sapply(x,function(y){round(sign(y)*(2^abs(y)),2)})})
cc<-sapply(1:length(cc_cols),function(x){paste(cccoeff[,x],ccstar[,x],sep="")})
cc<-cbind("","",cc[,1:8],cc[,9:13]) # To make ncol(cc) == ncol(mm)
rownames(cc)<-rownames(mm)
colnames(cc)<-colnames(mm)
colfac<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,1]))
facsepr<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,2]))
mysymbolsordered <- rownames(ebfit$contrasts$coeff)[-order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
mysymbolsordered <- mysymbolsordered[mysymbolsordered %in% rownames(mm)][1:50]
mm <- mm[mysymbolsordered,]
cc <- cc[mysymbolsordered,]
pdf(paste(out_dir,"Heatmap.DEGs.Top50.DN.p",p,".FCH",FCH,".",note,".pdf",sep=""),width=10,heigh=12)
DoHeatmap(mat=mm,
facsepr=colfac,
colfac=colfac,
symb=NULL,
dmeth=function(x){cor.dist(x,abs=F)},
hmeth='average',
margins=c(8,8),
cex.genes=1,
ColD=FALSE,main=paste("Genes:Top50.DN.of.Risa.BL.vs.Non-Ob.Control , Cellnote: ",note,sep=""),
cellnote=cc, notecex=1,notecol="black",
scl='row', breaks=seq(-2,2,.1),
lhei = c(1,10) , lwid = c(2,5),
cexCol=1,colscheme='gray',srtCol=90,adjCol=1)
dev.off()
}
Do.Top50.FCH.DN.Heatmap(mm_col_1, cc_col_1, myebfit, DEG, "FCH.vs.BL")
mm_cols <- mm_col
cc_cols <- cc_col
ebfit <- myebfit
DEG <- DetDEGs.Out$DEG
mm<-ebfit$means$coefficients[DEG,mm_cols]
cc<-ebfit$contrasts$p.value[DEG,cc_cols]
source("~/Downloads/omicsanalysis/BiostatsALL/R/getstar.R")
ccstar<-apply(cc,2,function(x){sapply(x,getstar)})
cc<-ebfit$contrasts$coeff[DEG,cc_cols]
cccoeff<-apply(cc,2,function(x){sapply(x,function(y){round(sign(y)*(2^abs(y)),2)})})
cc<-sapply(1:length(cc_cols),function(x){paste(cccoeff[,x],ccstar[,x],sep="")})
cc<-cbind("","",cc[,1:8],cc[,9:13]) # To make ncol(cc) == ncol(mm)
rownames(cc)<-rownames(mm)
colnames(cc)<-colnames(mm)
colfac<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,1]))
facsepr<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,2]))
mysymbolsordered <- rownames(ebfit$contrasts$coeff)[-order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
rownames(ebfit$contrasts$coeff)[-order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
rownames(ebfit$contrasts$coeff)[order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
rownames(ebfit$contrasts$coeff)[-order(ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
rownames(ebfit$contrasts$coeff)[order(-ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
Do.Top50.FCH.DN.Heatmap<-function(mm_cols, cc_cols, ebfit, DEG, note) {
# mm_cols <- mm_col
# cc_cols <- cc_col
# ebfit <- myebfit
# DEG <- DetDEGs.Out$DEG
mm<-ebfit$means$coefficients[DEG,mm_cols]
cc<-ebfit$contrasts$p.value[DEG,cc_cols]
source("~/Downloads/omicsanalysis/BiostatsALL/R/getstar.R")
ccstar<-apply(cc,2,function(x){sapply(x,getstar)})
cc<-ebfit$contrasts$coeff[DEG,cc_cols]
cccoeff<-apply(cc,2,function(x){sapply(x,function(y){round(sign(y)*(2^abs(y)),2)})})
cc<-sapply(1:length(cc_cols),function(x){paste(cccoeff[,x],ccstar[,x],sep="")})
cc<-cbind("","",cc[,1:8],cc[,9:13]) # To make ncol(cc) == ncol(mm)
rownames(cc)<-rownames(mm)
colnames(cc)<-colnames(mm)
colfac<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,1]))
facsepr<-as.numeric(factor(do.call(rbind,strsplit(colnames(mm),"[.]"))[,2]))
mysymbolsordered <- rownames(ebfit$contrasts$coeff)[order(-ebfit$contrasts$coeff[,"Risa.BL.vs.Control.NonObese"])]
mysymbolsordered <- mysymbolsordered[mysymbolsordered %in% rownames(mm)][1:50]
mm <- mm[mysymbolsordered,]
cc <- cc[mysymbolsordered,]
pdf(paste(out_dir,"Heatmap.DEGs.Top50.DN.p",p,".FCH",FCH,".",note,".pdf",sep=""),width=10,heigh=12)
DoHeatmap(mat=mm,
facsepr=colfac,
colfac=colfac,
symb=NULL,
dmeth=function(x){cor.dist(x,abs=F)},
hmeth='average',
margins=c(8,8),
cex.genes=1,
ColD=FALSE,main=paste("Genes:Top50.DN.of.Risa.BL.vs.Non-Ob.Control , Cellnote: ",note,sep=""),
cellnote=cc, notecex=1,notecol="black",
scl='row', breaks=seq(-2,2,.1),
lhei = c(1,10) , lwid = c(2,5),
cexCol=1,colscheme='gray',srtCol=90,adjCol=1)
dev.off()
}
Do.Top50.FCH.DN.Heatmap(mm_col_1, cc_col_1, myebfit, DEG, "FCH.vs.BL")
DoBigTable(myebfit, DetDEGs.Out$DEG)
save.image("~/Dropbox (Dropbox @RU)/Work/Abbvie_1130.4_OLINK/wp_nov_4_2021.RData")
load("~/Dropbox (Dropbox @RU)/Work/Abbvie_1311.4_OLINK/output_PASI100R/WP_mar_4_2022.RData")
View(md_bl)
View(mdfinal)
mdfinal$Timepoint=="W16"
table(mdfinal$Timepoint=="W16")
table(mdfinal$Treatment=="Placebo")
myebfit$means$coefficients["MPO",]
setwd("~/Dropbox (Dropbox @RU)/InteractiveVis/Adv.course/final/data/")
library("rjson")
world <- fromJSON(file="world-110m.geo.json")
json.names <- vector()
json.econ <- vector()
json.income <- vector()
for (c in world$features) {
json.names <- append(json.names, c$properties$admin)
json.econ <- append(json.econ, c$properties$economy)
json.income <- append(json.income, c$properties$income_grp)
}
pergdp <- read.csv(file="pergdp.csv")
View(pergdp)
View(pergdp)
table(pergdp$Country %in% json.names)
# non-matching countries
pergdp$Country[!pergdp$Country %in% json.names] # names to be changed
json.names[!json.names %in% pergdp$Country] # use this name
pergdp[,c(2:74)] <- pergdp[,c(2:74)]*100
rownames(pergdp) <- pergdp$Country
write.csv(pergdp, "pergdp_eur_actual.csv")
library(dplyr)
summary(pergdp[,c(2:74)])
count(pergdp[,c(2:74)])
europe <- c("Albania","Bosnia and Herzegovina",
"Bulgaria","Croatia",
"Czech Republic","Estonia",
"Hungary","Kosovo",
"Latvia","Lithuania",
"North Macedonia",
"Montenegro","Poland",
"Romania","Serbia",
"Slovakia","Slovenia",
"Yugoslavia","Armenia",
"Azerbaijan","Belarus",
"Georgia","Moldova",
"Russia","Ukraine",
"Austria","Belgium",
"Cyprus","Denmark",
"Finland","France",
"Germany","Greece",
"Iceland","Ireland",
"Italy","Luxembourg",
"Malta","Netherlands",
"Norway","Portugal",
"Spain","Sweden",
"Switzerland","United Kingdom")
table(pergdp$Country %in% europe)
summary(pergdp[europe,c(2:74)])
dim(pergdp[europe,c(2:74)])
table(pergdp[europe,c(45:74)] > 10)
table(pergdp[europe,c(42:74)] > 9)
table(pergdp[europe,c(42:74)] > 8)
table(pergdp[europe,c(42:74)] > 7)
table(pergdp[europe,c(42:74)] > 6)
table(pergdp[europe,c(42:74)] > 5)
table(pergdp[europe,c(42:74)] > 4)
pergdp_europe <- pergdp[,c(2:74)]
pergdp_europe[pergdp_europe > 4] <- 5
pergdp_europe[pergdp_europe > 3 & pergdp_europe <= 4] <- 4
pergdp_europe[pergdp_europe > 2 & pergdp_europe <= 3] <- 3
pergdp_europe[pergdp_europe > 1 & pergdp_europe <= 2] <- 2
pergdp_europe[pergdp_europe <= 1] <- 1
pergdp_europe$'Country' <- rownames(pergdp_europe)
write.csv(pergdp_europe, file="pergdp_eur_cat.csv")
View(pergdp_europe)
